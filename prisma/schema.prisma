// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  SUPER_ADMIN
  END_USER
  SERVICE_PROVIDER
}

enum Badge {
  FLYING
  REGISTERED
  VERIFIED
}

model Users {
  id              Int            @id @default(autoincrement())
  uuid            String         @unique @default(uuid()) @db.Uuid
  email           String?        @unique
  mobile          String?        @unique
  user_id         String?
  password        String?
  user_type       UserType
  badge           Badge?
  is_verified     Boolean        @default(false)
  is_registered   Boolean        @default(false)
  email_verified  Boolean        @default(false)
  mobile_verified Boolean        @default(false)
  signup_method   SIGNUP_METHOD?
  profile         Profile?
}

enum SIGNUP_METHOD {
  MOBILE
  EMAIL
  OTHER
}

enum GENDER {
  MEN
  WOMEN
  OTHER
}

model Profile {
  uuid       String    @unique @default(uuid()) @db.Uuid
  first_name String?   @db.VarChar(100)
  last_name  String?   @db.VarChar(100)
  address    String?   @db.VarChar(255)
  gender     GENDER?
  dob        DateTime?
  image      String?
  user       Users     @relation(fields: [userUuid], references: [uuid], onDelete: Cascade)
  userUuid   String    @unique @db.Uuid
}

// model GarageInfo {
// }
